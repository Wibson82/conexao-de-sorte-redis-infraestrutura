

services:
  redis:
    image: redis:8.2.2-alpine
    hostname: conexao-redis
    restart: unless-stopped
    command: >
      sh -c 'redis-server
      --requirepass "$$(cat /run/secrets/REDIS_PASSWORD)"
      --appendonly yes
      --bind 0.0.0.0
      --port 6379
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1000'
    ports:
      - "6379:6379"  # Expor para outros microsserviços
    networks:
      - conexao-network-swarm
    volumes:
      - redis-data:/data
    secrets:
      - REDIS_PASSWORD
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a \"$$(cat /run/secrets/REDIS_PASSWORD)\" ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 300M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    labels:
      org.opencontainers.image.title: "Conexão de Sorte Redis"
      org.opencontainers.image.description: "Redis Cache para microserviços"
      org.opencontainers.image.vendor: "Conexão de Sorte"
      org.opencontainers.image.version: "8.2.2-alpine"
      conexao.service.name: "redis"
      conexao.service.type: "infrastructure"
      # Traefik labels para monitoramento (opcional)
      traefik.enable: "false"

# ============================================================================
# SECRETS CONFIGURATION
# ============================================================================
secrets:
  REDIS_PASSWORD:
    external: true
    name: REDIS_PASSWORD

# ============================================================================
# VOLUMES CONFIGURATION
# ============================================================================
volumes:
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/redis-data/_data

# ============================================================================
# NETWORKS CONFIGURATION
# ============================================================================
networks:
  conexao-network-swarm:
    name: conexao-network-swarm
    external: true
    driver: overlay
    attachable: true
